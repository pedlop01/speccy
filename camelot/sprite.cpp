// Class automatically generated by Dev-C++ New Class wizard

#include "sprite.h" // class's header file

// class constructor
sprite::sprite()
{
	// insert your code here
}

// class destructor
sprite::~sprite()
{
    for( vector<sprite_ptr>::iterator it = internalSprites.begin() ; it != internalSprites.end() ; it++ )
    {
         delete *it;
    }
    internalSprites.clear();
    sourceImage = NULL;
}

void sprite::newSprite(static_image *bitmapFile, int upLeftX, int upLeftY, int downRightX, int downRightY, int estat, int nComponents)
{
     sourceImage   = bitmapFile;
     xUpLeft       = upLeftX;
     yUpLeft       = upLeftY;
     xDownRight    = downRightX;
     yDownRight    = downRightY;
     xSize         = xDownRight - xUpLeft + 1;
     ySize         = yDownRight - yUpLeft + 1;
     state         = estat;
     numComponents = nComponents;
}

static_image* sprite::getSourceImage()
{
    return sourceImage;
}

void sprite :: AddInternalSprite(static_image *bitmapFile, int upLeftX, int upLeftY, int downRightX, int downRightY)
{
     sprite_ptr sptr = new sprite();
     sptr->newSprite(bitmapFile, upLeftX, upLeftY, downRightX, downRightY, 0, 0);
     
     internalSprites.push_back(sptr);
}

static_image* sprite :: getInternalSprite(int i)
{
    assert( internalSprites[i] != NULL );
    return internalSprites[i]->getSourceImage();
}
