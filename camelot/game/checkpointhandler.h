// Class automatically generated by Dev-C++ New Class wizard

#ifndef CHECKPOINTHANDLER_H
#define CHECKPOINTHANDLER_H

#include "entradasortida.h"
#include <vector>
#include <list>

using namespace std;

class checkpoint 
{
  public:
    int num;
    int x_izq;
    int y_izq;
    int x_der;
    int y_der;
    int warrior_ini_x;
    int warrior_ini_y;
    list<int> nextCheckpoint;
    
  public:
    checkpoint()  { nextCheckpoint.clear();}
    ~checkpoint() { nextCheckpoint.clear();}                 
};

/*
 * Checkpoint Handler
 */
class checkpointHandler
{
    public:
       int                 numCheckpoints;
       int                 lastValidCheckpoint;
       list<int>           currentCheckpoints;
       vector<checkpoint*> checkpoints;
       
       
	public:		
		checkpointHandler();     // class constructor
		~checkpointHandler();    // class destructor
		
		void loadCheckpointFile(char* file);
		void saveCheckpointFile(char* file);
		
		inline int GetNumCheckpoints() { return numCheckpoints; }
		int GetWarriorIniXCurrentCheck(); 
		int GetWarriorIniYCurrentCheck(); 
		
        void PositionedOnNextCheckpoint(int x, int y, int xSize, int ySize);			
        
        inline vector<checkpoint*>* GetCheckpoints()   { return &checkpoints; }
        inline void AddNewCheckpoint(checkpoint* chk)  { checkpoints.push_back(chk); numCheckpoints = checkpoints.size(); }
};

#endif // CHECKPOINTHANDLER_H
