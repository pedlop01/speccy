// Class automatically generated by Dev-C++ New Class wizard

#include "watergraphicfx.h" // class's header file

// class constructor
waterGraphicFx::waterGraphicFx()
{
    waterFrames = 0;
    maxWaterDisp = 0;
    transitionTime = 0;
    savedTime = 0;    
    frameSizeY = 0;
    waterFramePosition = NULL;                                
}

// class destructor
waterGraphicFx::~waterGraphicFx()
{
}

void waterGraphicFx :: initialize(unsigned int wf, unsigned int mwd, unsigned int tt)
{
     waterFrames = wf;
     maxWaterDisp = mwd;
     transitionTime = tt;
     waterFramePosition = new unsigned int[waterFrames];
     frameSizeY = SCREEN_Y / waterFrames;
   
     int j = 0;
     bool arriba = true;
     for( int i = 0 ; i < waterFrames ; i++ )
     {
         waterFramePosition[i] = j;
         if( arriba )         
             j++;
         else 
             j--;
         
         if( j > maxWaterDisp )
             arriba = false;
         if( j < 0 )
             arriba = true;
     }    

}

void waterGraphicFx :: handler(BITMAP* input_buffer, BITMAP* output_buffer, unsigned int output_bitmap_size_x, unsigned int output_bitmap_size_y, unsigned int time)
{
    int frameSizeY_aux = 0;
    for( int i = 0 ; i < waterFrames ; i++ )
    {
        blit(input_buffer, output_buffer, 0, frameSizeY_aux, waterFramePosition[i], frameSizeY_aux, output_bitmap_size_x, frameSizeY);
        frameSizeY_aux += frameSizeY;
    } 
    if( time - savedTime > transitionTime )
    {
        int aux = waterFramePosition[waterFrames - 1];
        for( int i = waterFrames - 1 ; i > 0 ; i-- )
        {
            waterFramePosition[i] = waterFramePosition[i - 1];
        } 
        waterFramePosition[0] = aux;
               
        savedTime = time;
    }
     
}
