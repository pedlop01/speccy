// Class automatically generated by Dev-C++ New Class wizard

#ifndef OBJECTHANDLER_H
#define OBJECTHANDLER_H

#include <math.h>
#include <vector.h>
#include "entradaSortida.h"
#include "defines.h"

#include "objeto.h"
#include "mundo.h"

#include "symboltable.h"

/*
 * No description
 */
class objectHandler   
{
  private:
    int numObjects;
    vector<objeto*> objects;
    
    // Pointer to symbol table
    symbolTablePtr symbTable;    
    
  public:
    objectHandler(symbolTablePtr _symbTable);  		// class constructor		
	~objectHandler();                               // class destructor
	
    inline int NumObjects() { return objects.size(); }
    
    inline vector<objeto*>* GetObjects() { return &objects; }
    
	void ReadObjectsFromFile(char *file);
	void SaveObjectsToFile(char *file);
    void DrawObjectsInScreen(
         BITMAP* buffer, 
         mundo* world, 
         int screen_x, int screen_y, 
         int size_x, int size_y, 
         bool drawObject,
         unsigned int mseg);


    inline void AddNewObject(objeto* object) { objects.push_back(object); numObjects = objects.size(); }
    
    vector<objeto*>::iterator GetObjectInWorldByCoords(mundo* world, int x, int y, int screen_x, int screen_y);
    objeto* getObject(string name);

	private:
            
            inline string chopToDirectory(char *file)
            {
                 char *ptr;
                 string token;
                 string directory;
                 
                 ptr = strtok(file, "/\\");
                 while( ptr != NULL )
                 {
                        token = ptr;                        
                        ptr = strtok(NULL, "/\\"); 
                        if( ptr != NULL )
                        {
                            directory += (token + "/");
                        }
                 }
                 return directory;
            }
    
};

#endif // OBJECTHANDLER_H
