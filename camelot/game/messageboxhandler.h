// Class automatically generated by Dev-C++ New Class wizard

#ifndef MESSAGEBOXHANDLER_H
#define MESSAGEBOXHANDLER_H

#include <allegro.h>

#include "entradaSortida.h"
#include "defines.h"

#include "objeto.h"
#include "mundo.h"
#include "symboltable.h"

/*
 * No description
 */
class messageBoxHandler
{
    private:
        FONT *myfont;
        PALETTE palette;            
        char text[100];
        unsigned int activated;
        unsigned int reason;          // 0 means, use text for writting
        objeto* messageWindow;
        bool    wakeUpByKey;
        bool    counting;

        // Pointer to symbol table
        symbolTablePtr symbTable; 
        unsigned int timeChk;           
        
	public:		
		messageBoxHandler(symbolTablePtr symb, char* file);                // class constructor
		~messageBoxHandler();		                  // class destructor
		
		inline unsigned int getActivated() { return activated; }
		inline void setActivated(bool a)   { activated = a;    }
		
		inline unsigned int getTimeChk()       { return timeChk; }
		inline void setTimeChk(unsigned int t) { counting = true; timeChk = t;    }
		
		inline char* getText()       { return text; }
		inline void setText(char* t) { strcpy(text, t); }

        inline unsigned int getReason()       { return reason; }
        inline void setReason(unsigned int r) { reason = r;    }
        
        inline void setWakeUpByKey(bool w) { wakeUpByKey = w; }
        
        inline bool getCounting() { return counting; }
			
		void drawMessageBox(BITMAP* buffer, mundo* world, unsigned int mseg, unsigned int entrada_teclado);
};

#endif // MESSAGEBOXHANDLER_H
